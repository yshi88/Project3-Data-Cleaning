Select*
From NashvilleHousing.dbo.NashvilleHousing

--Date Format

Select SaleDate as SaleDateConverted, Convert(Date, SaleDate) 

From NashvilleHousing.dbo.NashvilleHousing

Update NashvilleHousing
Set SaleDate = Convert(Date,SaleDate)

ALTER TABLE NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
Set SaleDateConverted = Convert(Date,SaleDate)

--Populate Property Address Data

Select *

From NashvilleHousing.dbo.NashvilleHousing

--Where PropertyAddress is Null
Order by ParcelID

Select a.ParcelID,a.PropertyAddress,b.ParcelID,b.PropertyAddress, Isnull(a.PropertyAddress,b.PropertyAddress)
From NashvilleHousing.dbo.NashvilleHousing a
Join NashvilleHousing.dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	And a.[UniqueID] <>b.[UniqueID]
Where a.PropertyAddress is null

Update a
Set PropertyAddress = Isnull(a.PropertyAddress,b.PropertyAddress)
From NashvilleHousing.dbo.NashvilleHousing a
Join NashvilleHousing.dbo.NashvilleHousing b
	on a.ParcelID = b.ParcelID
	And a.[UniqueID] <>b.[UniqueID]
Where a.PropertyAddress is null

--Breaking out Address into Individual Colums (Address, City, State)


Select PropertyAddress 

From NashvilleHousing.dbo.NashvilleHousing

--Where PropertyAddress is Null
--Order by ParcelID

Select 
SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress)-1) AS Address
,SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) + 1, LEN(PropertyAddress)) AS City

From NashvilleHousing.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
Add PropertySplitAddress Nvarchar(255);

Update NashvilleHousing
Set PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',',PropertyAddress)-1) 

ALTER TABLE NashvilleHousing
Add PropertySplitCity Nvarchar(255);

Update NashvilleHousing
Set PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',',PropertyAddress) + 1, LEN(PropertyAddress)) 


Select *
From NashvilleHousing.dbo.NashvilleHousing

Select OwnerAddress
From NashvilleHousing.dbo.NashvilleHousing

Select
Parsename(REPLACE(OwnerAddress,',','.'),3)
,Parsename(REPLACE(OwnerAddress,',','.'),2)
,Parsename(REPLACE(OwnerAddress,',','.'),1)

From NashvilleHousing.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

Update NashvilleHousing
Set OwnerSplitAddress = Parsename(REPLACE(OwnerAddress,',','.'),3)

ALTER TABLE NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update NashvilleHousing
Set OwnerSplitCity = Parsename(REPLACE(OwnerAddress,',','.'),2) 

ALTER TABLE NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update NashvilleHousing
Set OwnerSplitState = Parsename(REPLACE(OwnerAddress,',','.'),1)


--Change Y and N to Yes and No in 'Sold as Vacant' field

Select Distinct(SoldAsVacant), Count(SoldAsVacant) 

From NashvilleHousing.dbo.NashvilleHousing

Group by SoldAsVacant
Order by 2

Select SoldAsVacant
,Case When SoldAsVacant = 'N' Then 'NO'
	  When SoldAsVacant = 'Y' Then 'Yes'
	  Else SoldAsVacant
	  End
From NashvilleHousing.dbo.NashvilleHousing

Update NashvilleHousing
Set SoldAsVacant = Case When SoldAsVacant = 'N' Then 'NO'
	  When SoldAsVacant = 'Y' Then 'Yes'
	  Else SoldAsVacant
	  End
--Do this if the table is in 'bit' form

ALTER TABLE NashvilleHousing
Alter Column SoldAsVacant Varchar(3);

Update NashvilleHousing
Set SoldAsVacant = 'Yes'
Where SoldAsVacant = '1'

Update NashvilleHousing
Set SoldAsVacant = 'No'
Where SoldAsVacant = '0'



--Remove Duplicates

WITH RowNumCTE AS(
Select *,

ROW_NUMBER() OVER (
PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
ORDER BY
	UniqueID
	) row_num

From NashvilleHousing.dbo.NashvilleHousing
--order by ParcelID
)

Select *
From RowNumCTE
Where row_num > 1
Order by PropertyAddress


--Delete Unused Columns 

Select *
From NashvilleHousing.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
